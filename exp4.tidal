hush

-- new project for EP made completely inside tidal

do
    let autos a b = (range a b $ saw)
    let autor c d = (range c d $ rand)
    let autonotes e f = (range e f rand)
    let cl channel cycles = (clutchIn channel cycles)
    let fd channel cycles = (xfadeIn channel cycles)
    let nt = note
    let rtmvar = choose [2,4,8,16]
    let mov1 = choose [0,7,5,-3]
    let mov2 = "[12]" 
    let mov3 ="0" |+| "<5 4 -3 -3>" 
    let spd = "1"
    let stutInput = 0
    let del a = delay a
    let delT a = delaytime a
    let delF a = delayfeedback a
    let void = fast 1
    let num = 8
    let swng = (swingBy (4/24) 8) -- the sweet sopt (4/28) or (4/24)
    let center = 
            always (#pan 0.5)
    let delunit a b c =
            (# delay a)
            .(#delaytime b)
            .(#delayfeedback c)
    let roomunit a b c =
            (# room a)
            .(# size b)
            .(# dry c)
    let autopan = (#pan (autos 0 1))
    -- 
    -- TEMPO
    --
    setcps (140/240)
    --
    -- FUNCTION GROUPS
    --
    let send =
            roomunit 0.6 0.7 0.9
            .delunit 0 0 0
    let func1 =  
            void
            .fast (spd)
            . every 4 (
                (# crush "8 .. 4")
                .(# cut 16)
            )
    let func2 =
            void
            .whenmod 8 7 (
                void
                .(# hpf (fast 0.5 $ "50 .. 1" * "100"))
                .(# hpq 0.2)
            )
    let func3 = 
            void
            .every 2 (
                void
                -- .(# binshift "[10 .. 1]*0.8")
                -- .(# legato 0.5)
                .fast 1
            )
            . stut' 2 (4/32)(
                    jux rev
                    -- .(# binshift "[10 .. 1]*0.8")
            )
    --
    -- FUNCTION SWITCHES
    --
    let func =
            void
            .func1
            .func2
            .func3
    --
    -- NOTE MANIPULATION
    --
    let masterPitch =
            (|+| nt "-5").
            (|+| nt "[0 [~ 12] 7 0]*2").
            slow 4.
            (|+| nt "<5 9 7 5>")
    --        
    -- TRACK MANIPULATION
    --
    let trackio = do
            -- p 1 silence
            p 2 silence
            --  p 3 silence
            -- p "midi" silence
            p "synths" silence
            p 0 silence
    --
    -- filters
    --
    let filter = 
          every 1 (    
                --(#lpf ("[100 .. 50] * 8" * "[10 .. 1] * 2" * "[10 .. 1]" * "2"))
                (#hpf ("[1 .. 10] * 8" * "[1 .. 10] * 2" * "[1 .. 10]" * "10"))
                . (#lpq 0.2)
          )
    --
    --
    --
    p 1
        $ (
                (#lpf ("[10 .. 1] * <2 8 4>" * "[10 .. 1] * 2" * "[10 .. 1] * 4" * "10"))
                .(#lpq 0.4)
                .struct "[0 1 1 1 0 1 1 0]*2 "
                .(#speed "[1 1 [1 2] 1 0.5 1 [0.5 2] 1]*1")
        ) 
        $ "dbas"
        # shape 0.8
        # n 2
        # legato 1.3
        # gain 0.8
    p 2
        $ (
            func
            .slice 8 "2  3  2  2"
        )
        $ "amb"
        # gain 1.2
        # cut 2
    p 3
        $ (
            void
            -- .func
            .(#legato 0.6)
            .slow 1
            -- . striate 2
            -- .filter
        )
        -- $ struct (binary "333")
       --  $ send
        $ stack
        [   
            struct ("[t*8]%5") $ loopAt 1 $ chop 16 $ "" # hpf 3000,
            "psr*8 ~" # n (irand 4) #release 0.3 # hpf 2000 ,
            struct ("[1 1 1 1]") $ "gab" # speed 0.5 # n 0 # gain 1.1 # legato 0.4 # hpf 100,
            struct "1 1 1 [0 1] [1] [0 1] 1 1" $ "bd" # gain 1.2,
            -- "~ sn ~ [sn]" # n 1 # legato 0.4 # hpf 100 # distort 2 # triode 5,
            -- masterPitch $ "yaoya" # legato 0.9 # lpf 200 # nt "0",
            "[hh] [hh oh] ~ oh hh",
            struct (binary "233") $ "~ cp" # release 0.5 # n 1 # cut 1
        ]
        # orbit 3
    trackio