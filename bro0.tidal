hush

do 
    let trackio = do  
        -- p "brk" silence 
        p "pad" silence -- previous
        -- p "d1" silence -- second
        -- p "d2" silence -- first
        -- p "d3" silence -- first
        p "cl" silence
        p "" silence 
    let fx = 
            void
            .whenmod 8 7 (
                void
                .(# hpf (fast 0.5 $ "50 .. 1" * "100"))
                .(# hpq 0.1)
            )
            .whenmod 8 8(
                void
                .filter "lpf" 100 (8/16)
            )
            .(#r "0.5*16")
        fx' =
            void
            .whenmod 4 3 (
                void
                -- . density "<1 1 1 2> "
                . whenmod 4 3 (
                     st "1*16"
                     -- .ply "<2 8>"
                     .(#l 0.8)
                )
            )   
            .whenmod 4 3 (
                void
                .stut' 2 ("<2>"/32) (
                    degradeBy 0.02
                    .(|* speed "1 .. 2 .. -1")
                )
            )         
            . (# legato 1)
            -- . swng
        fx'' = chop "2 2 2 1"
               .(#speed "[1 1 1 -1]") 
        func =
            void
            -- .func1
            .func2
            .func3
    let sub = 
            void 
            .send2 
            . fx'
    setcps(140/240)
    p "d3"
        $ (
            void
            -- .func1 
            .fx
        )
        $ stack [
            ""
            -- ,st "[1 1] [0 1] 0 [1 1]" $ big 0.4 1.2 $ slice 4 "<[8 2 3 6] [7*4 13 12 1]>" $ la "<4>" $ "bro*4" # n "<2>" # l 0.8 -- # lpf (range 100 15000 $ saw/4 )-- # l (fast 0.5 $ rev(sine))
            ,big 0.5 1.3 $sub $ la "[4 2 4 4]" $ st "1*8" $ slice 8 "1 [1 0] [5 6] [7]" $ "bro" # n "<1>"  # l 0.8 #hpf 1000
        ] 
        # orbit 1
    p "d1"
        $ (
            big 0.4 1
            -- .func1 
            .fx
            .func
        )
        $ stack [
            ""
            ,send2 $ density "4 [8 2]" $ "[~ sn:1]" # l 1
            -- ,"bd([3 5],8)%4" # n 5 # g 1.4 # l 1
            ,st "1*[16 32 16 32]" $ " ~ grime([3 5],<8 4>)%4 ~>" #n (range 83 100(sine* "118")) # l (range 0.1 0.99 (square * sine * 2/180 * "8")) -- #nt "5" + "-12"
        ] 
        # orbit 3
    p "d2"
        $ (
            void
            -- .send
            .big 0.5 1.1
            -- .func
            -- .filter "lpf" 40 "1/8"
            -- .fx
            -- .sub
            -- .st "1*16"
            -- .st "<1*[16 8 16 16 8 32 8 12]>"
        )
        $ stack [
            ""
            ,la 2 $ randslice 16 $ "jj1*16" # n 39 #l (rev $ range 0.1 0.9 (saw+sine)) # lpf 4000 #lpq 0.0001 
        ] 
        -- # gain (sine) 
        # l 0.8
        # orbit 2
    trackio

ghci
