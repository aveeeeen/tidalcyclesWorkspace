hush

do
    let trackio = do  
            -- p "brk" silence 
            p "pad" silence -- previous
            -- p "b" silence -- breaks
            -- p "d1" silence -- first
            -- p "d2" silence -- bro
            p "cl" silence
            p "" silence
        fx = 
            void
            .whenmod 8 0 (
                void
                .(# hpf (fast 0.5 $ "50 .. 1" * "100"))
                .(# hpq 0.1)
            )
            .whenmod 8 0(
                void
                .filter "hpf" 80 (8/16)
            )
        fx' = 
            void
            .whenmod 4 0 (
                void
                -- . chop 2
                . whenmod 4 0 (
                        st "1*16"
                        -- .
                        .ply "1 1 2 1"
                        .(#l 0.8)
                )
            )   
            .whenmod 4 4 (
                void
                .stut' 2 ("<2>"/32) (
                    degradeBy 0.02
                    .(|* speed "1 .. 2 .. -1")
                )
            )         
            . (# legato 1)
            -- . swng
        fx'' = void .(#r "0.1*16")
        func =
            void
            -- .func1
            -- .func2
            .func3
        sub = 
            void 
            .send2 
            . fx' 
            . fx''
    setcps(140/240)
    p "d2"
        $ (
            void
            -- .func1 
            .sub
            .fx
        )
        $ stack [
            ""
            -- ,func $ st "{[1 1] [0 1] 0 [1 1]}%4" $ big 0.6 1.0 $ slice 8 "<[8 2 3 6] [7*4 13 12 1]>" $ la "<4>" $ "bro*4" # n "<0>" # l 0.8 -- # lpf (range 100 15000 $ saw/4 )-- # l (fast 0.5 $ rev(sine))
            ,big 0.5 1.2 $ sub $func $ st "1*16" $ slice 8 "1 [1 0] [5 6] [7]" $ la "[4 2 4 4]"  $ "bro" # n "<1>"  # l 0.8 #hpf 1000
        ] 
        # orbit 1
    p "d1"
        $ (
            big 0.4 1
            -- .func1 
            .fx
            -- .func
            .fx''
        )
        $ stack [
            ""
            -- ,send2 $ density "4 [8 2]" $ "[~ sn:1]" # l 1
            -- ,"kik([3 5],8)%4" # n 3 # g 1.4 # l 1
            -- ,sub $ st "1*[16 32 16 32]" $ " ~ grime([3 5],<8 4>)%4 ~>" #n (range 83 100(sine* "118")) # l (range 0.1 0.99 (square * sine * 2/180 * "8")) -- #nt "5" + "-12"
        ] 
        # orbit 3
    p "b"
        $ (
            void
            .func
            -- .filter "lpf" 20 "1/8"
            .sub
            .big 0.4 1.1
            .fx
        )
        $ st "{1 0 1 1 0 1 0}%8" $ la 4 $ slice 16 (irand 25) $ "jj1*16"
        # r 0.5 # l 0.8 # n 27 # orbit 5
    trackio

ghci
