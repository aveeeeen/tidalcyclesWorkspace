hush
 
-- new project for EP made completely inside tidal

do
    let autos a b = (range a b $ saw)
    let autor c d = (range c d $ rand)
    let autonotes e f = (range e f rand)
    let cl channel cycles = (clutchIn channel cycles)
    let fd channel cycles = (xfadeIn channel cycles)
    let nt = note
    let rtmvar = choose [2,4,8,16]
    let mov1 = choose [0,7,5,-3]
    let mov2 = "[12]" 
    let mov3 ="0" |+| "<5 4 -3 -3>" 
    let spd = "1"
    let stutInput = 0
    let del a = delay a
    let delT a = delaytime a
    let delF a = delayfeedback a
    let void = fast 1
    let num = 8
    let swng = (swingBy (4/24) 8) -- the sweet sopt (4/28) or (4/24)
    let center = 
            always (#pan 0.5)
    let delunit a b c =
            (# delay a)
            .(#delaytime b)
            .(#delayfeedback c)
    let roomunit a b c =
            (# room a)
            .(# size b)
            .(# dry c)
    let autopan = (#pan (autos 0 1))
    -- 
    -- TEMPO
    --
    setcps (130/240)
    --
    -- FUNCTION GROUPS
    --
    let send =
            roomunit 0.3 0.7 0.9
            .delunit 0.3 (1/8) 0.5
    let func1 =  
            void
            .fast (spd)
            . every 4 (
                (# crush "8 .. 4")
                .(# cut 16)
            )
    let func2 =
            void
            .whenmod 8 7 (
                void
                .(# hpf (fast 0.5 $ "50 .. 1" * "100"))
                .(# hpq 0.2)
            )
    let func3 = 
            void
            .every 16 (
                void
                .(# binshift "[1 .. 2]*8")
                .(# speed ("1 .. 8" * "-1"))
                .chop 2
                .fast 2
            )
    --
    -- FUNCTION SWITCHES
    --
    let func =
            void
            .func1
            .func2
            .func3
    --
    -- NOTE MANIPULATION
    --
    let masterPitch =
            (|+| nt "-5").
            (|+| nt "[0 [~ 12] 7 0]*2").
            slow 4.
            (|+| nt "<5 9 7 5>")
    --        
    -- TRACK MANIPULATION
    --
    let trackio = do
            p 1 silence
            -- p "bass" silence
            -- p "pad" silence
            -- p "drums" silence
            -- p "kic" silence
            p "synths" silence
            p 0 silence
    --
    -- filters
    --
    let filter = 
          every 1 (    
                (#lpf ("[10 .. 1] * 8" * "[10 .. 1] * 1" * "[10 .. 1]" * "10"))
                -- (#hpf ("[1 .. 10] * 8" * "[5 .. 10] * 2" * "[1 .. 10]" * "100"))
                . (#lpq 0.2)
          )
    --
    --
    --
    p "drums"
        $ (
            func
            . whenmod 8 2 (
                struct (binary "234")
            )
        )
        $ stack
        [
            loopAt 4 $ slice 32 "[0 .. 7]*4*2*<4 2 8>" $ "tokyo" # n 2 # shape 0.7 # crush ("3 .. 7" * " 12 .. 3") # hpf 4000,
            struct "1 0 1 1 1 0 1 1" $ loopAt 4 $ randslice 32 $ "tokyo" # n 3 #shape 0.8,-- # hpf 3000 # hpq 0.1,
            "~ sn ~ sn" # n 1 # shape 0.5 # crush 3,
            "~ psr*16" # n (irand 8) # hpf 3000
        ]
        # legato 0.7
        # orbit 1
    p "pad"
        $ (
            void
            .func
            .struct "1*[4 12 16 16]/2"
            .randslice 4
            .jux rev
            .filter
            .send
        )
        $ "pad"
        # legato 0.3
    p "bass"
        $ (
                (#lpf ("[10 .. 1] * 8" * "[1 .. 10]/2 [10 .. 1]/2" * "20"))
                .(#lpq 0.2)
                .struct "[0 1 1 1 0 1 1 1]*2 "
                .(#speed "[1 [1 2] -1*[1 2] 1 0.5 1 [0.5 2] 1]*1")
                . func 
                -- .(#nt ("<-3 -5 -7>/4"))
                -- .(# hpf ("50" * "[1 .. 20]/2 [20 .. 1]/2" ))
                -- .(# hpq 0.2)
        ) 
        $ "dbas" 
        -- # note "12"
        # shape 0.7
        # n 2
        # legato 0.9
        # gain 0.8
    p "kic"
        $ (
            void
            .filter
            .func
        )
        $ stack 
        [
            "[bd*2] sn [~ bd] [~ sn]",
            "hh*16" # n 1,
            "~ oh ~ oh"
        ]
    trackio
    
